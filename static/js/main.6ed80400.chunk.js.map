{"version":3,"sources":["images/codecamp7 v1_201107_1.jpg","components/Education.js","components/Header.js","components/PersonalProfile.js","components/Languages.js","components/Skill.js","components/WorkExperience.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Education","Text","Typography","Title","span","style","textAlign","level","fontStyle","type","Header","justify","src","profileImg","alt","width","height","borderRadius","objectFit","margin","DownloadOutlined","wordWrap","href","PersonalProfile","Languages","marginTop","columns","title","dataIndex","key","responsive","dataSource","language","listening","writing","reading","speaking","showHeader","pagination","Skill","strong","strokeColor","percent","size","showInfo","WorkExperience","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ed80400.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codecamp7 v1_201107_1.068dd499.jpg\";","import { Col, Divider, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction Education() {\r\n  const { Text, Title } = Typography;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8} style={{ textAlign: \"center\" }}>\r\n          <Title level={2} style={{ fontStyle: \"italic\" }}>\r\n            Education\r\n          </Title>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Row>\r\n            <Title level={3}>Thammasart University</Title>\r\n          </Row>\r\n          <Row>\r\n            <Title level={5} type=\"secondary\">\r\n              2015 - 2019\r\n            </Title>\r\n          </Row>\r\n          <Row>\r\n            <Text>Bachelorâ€™s Degree of Science (Computer Science)</Text>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport profileImg from \"../images/codecamp7 v1_201107_1.jpg\";\r\nimport { Button, Col, Divider, Row, Typography } from \"antd\";\r\nimport { DownloadOutlined } from \"@ant-design/icons\";\r\n\r\nfunction Header() {\r\n  const { Text, Title } = Typography;\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={4}>\r\n        <img\r\n          src={profileImg}\r\n          alt=\"profile\"\r\n          width=\"150px\"\r\n          height=\"150px\"\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            objectFit: \"cover\",\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col span={16}>\r\n        <Title style={{ margin: \"0 8px\" }}>Nuttawat Rojboonnark</Title>\r\n        <Title level={2} type=\"secondary\" style={{ margin: \"0 8px\" }}>\r\n          Full Stack Web Developer\r\n        </Title>\r\n      </Col>\r\n      <Col span={4}>\r\n        <Row justify=\"end\">\r\n          <Button type=\"primary\">\r\n            <DownloadOutlined />\r\n            Download as PDF\r\n          </Button>\r\n        </Row>\r\n        <Row justify=\"end\" style={{ wordWrap: \"break-word\", textAlign: \"end\" }}>\r\n          <Text>\r\n            Address: 87/458, Bangkruay-sainoi Road, Bang Rak Yai , Bang Bua\r\n            Thong , Nonthaburi, 11110\r\n          </Text>\r\n        </Row>\r\n        <Row justify=\"end\">\r\n          <Text>Email:</Text>\r\n          <a href={\"mailto: nuttawat.rojb@gmail.com\"}>\r\n            &ensp;nuttawat.rojb@gmail.com\r\n          </a>\r\n        </Row>\r\n        <Row justify=\"end\">\r\n          <Text>Tel: 095-245-4697</Text>\r\n        </Row>\r\n      </Col>\r\n      <Divider />\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Col, Divider, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction PersonalProfile() {\r\n  const { Text, Title } = Typography;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8} style={{ textAlign: \"center\" }}>\r\n          <Title level={2} style={{ fontStyle: \"italic\" }}>\r\n            Personal Profile\r\n          </Title>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Text>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            odio nisl, ultrices eget porttitor ut, finibus nec risus. Nunc porta\r\n            mattis porttitor. Aenean auctor libero lorem, nec tincidunt massa\r\n            laoreet in. Aliquam sollicitudin interdum nisi sed ultrices. Integer\r\n            porta turpis a sapien blandit, vitae vulputate neque laoreet.\r\n            Vivamus et risus vehicula lectus dapibus vulputate at ac lacus. Nunc\r\n            tincidunt tortor sit amet nunc imperdiet, eu ullamcorper lectus\r\n            cursus. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n            Fusce id arcu felis. Mauris molestie tincidunt lorem, at pretium\r\n            neque. In eget porta massa. Proin eget ullamcorper erat, a ultricies\r\n            augue. Pellentesque vel.\r\n          </Text>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PersonalProfile;\r\n","import { Col, Row, Table, Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction Languages() {\r\n  const { Text, Title } = Typography;\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Language\",\r\n      dataIndex: \"language\",\r\n      key: \"language\",\r\n      responsive: [\"xs\", \"md\", \"lg\"],\r\n    },\r\n    {\r\n      title: \"Listening\",\r\n      dataIndex: \"listening\",\r\n      key: \"listening\",\r\n      responsive: [\"xs\", \"md\", \"lg\"],\r\n    },\r\n    {\r\n      title: \"Writing\",\r\n      dataIndex: \"writing\",\r\n      key: \"writing\",\r\n      responsive: [\"xs\", \"md\", \"lg\"],\r\n    },\r\n    {\r\n      title: \"Reading\",\r\n      dataIndex: \"reading\",\r\n      key: \"reading\",\r\n      responsive: [\"xs\", \"md\", \"lg\"],\r\n    },\r\n    {\r\n      title: \"Speaking\",\r\n      dataIndex: \"speaking\",\r\n      key: \"speaking\",\r\n      responsive: [\"xs\", \"md\", \"lg\"],\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      language: \"Thai\",\r\n      listening: \"Native\",\r\n      writing: \"Native\",\r\n      reading: \"Native\",\r\n      speaking: \"Native\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      language: \"English\",\r\n      listening: \"Fair\",\r\n      writing: \"Fair\",\r\n      reading: \"Average\",\r\n      speaking: \"Fair\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      language: \"Japanese\",\r\n      listening: \"Basic\",\r\n      writing: \"Basic\",\r\n      reading: \"Basic\",\r\n      speaking: \"Basic\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Row style={{ marginTop: 8 }}>\r\n      <Col span={12}>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          showHeader={true}\r\n          pagination={false}\r\n          title={() => <Title level={3}>Languages</Title>}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Languages;\r\n","import { Col, Divider, Progress, Row, Tag, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Languages from \"./Languages\";\r\n\r\nfunction Skill() {\r\n  const { Text, Title } = Typography;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8} style={{ textAlign: \"center\" }}>\r\n          <Title level={2} style={{ fontStyle: \"italic\" }}>\r\n            Skill\r\n          </Title>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Row>\r\n            <Title level={3}>Programming</Title>\r\n          </Row>\r\n          <Row>\r\n            <Col span={2}>\r\n              <Text strong>HTML/CSS</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Progress\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#87d068\",\r\n                }}\r\n                percent={98}\r\n                size=\"small\"\r\n                showInfo={false}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={2}>\r\n              <Text strong>Javascript</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Progress\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#87d068\",\r\n                }}\r\n                percent={96}\r\n                size=\"small\"\r\n                showInfo={false}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={2}>\r\n              <Text strong>React</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Progress\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#87d068\",\r\n                }}\r\n                percent={75}\r\n                size=\"small\"\r\n                showInfo={false}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={2}>\r\n              <Text strong>Java</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Progress\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#87d068\",\r\n                }}\r\n                percent={70}\r\n                size=\"small\"\r\n                showInfo={false}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={2}>\r\n              <Text strong>SQL</Text>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Progress\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#87d068\",\r\n                }}\r\n                percent={60}\r\n                size=\"small\"\r\n                showInfo={false}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Languages />\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Skill;\r\n","import { Col, Divider, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction WorkExperience() {\r\n  const { Text, Title } = Typography;\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={8} style={{ textAlign: \"center\" }}>\r\n          <Title level={2} style={{ fontStyle: \"italic\" }}>\r\n            Work Experience\r\n          </Title>\r\n        </Col>\r\n        <Col span={16}>\r\n          <Text>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\r\n            odio nisl, ultrices eget porttitor ut, finibus nec risus. Nunc porta\r\n            mattis porttitor. Aenean auctor libero lorem, nec tincidunt massa\r\n            laoreet in. Aliquam sollicitudin interdum nisi sed ultrices. Integer\r\n            porta turpis a sapien blandit, vitae vulputate neque laoreet.\r\n            Vivamus et risus vehicula lectus dapibus vulputate at ac lacus. Nunc\r\n            tincidunt tortor sit amet nunc imperdiet, eu ullamcorper lectus\r\n            cursus. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n            Fusce id arcu felis. Mauris molestie tincidunt lorem, at pretium\r\n            neque. In eget porta massa. Proin eget ullamcorper erat, a ultricies\r\n            augue. Pellentesque vel.\r\n          </Text>\r\n        </Col>\r\n      </Row>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WorkExperience;\r\n","import React from \"react\";\nimport Education from \"./components/Education\";\nimport Header from \"./components/Header\";\nimport PersonalProfile from \"./components/PersonalProfile\";\nimport Skill from \"./components/Skill\";\nimport WorkExperience from \"./components/WorkExperience\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <PersonalProfile />\n      <WorkExperience />\n      <Skill />\n      <Education />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}